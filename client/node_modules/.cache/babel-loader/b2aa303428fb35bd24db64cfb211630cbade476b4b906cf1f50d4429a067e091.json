{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\choosy\\\\Documents\\\\React-Projects\\\\react-image-gallery-using-unsplash\\\\client\\\\src\\\\components\\\\Images.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport Image from './Image';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class Images extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      images: [],\n      count: 30,\n      start: 1\n    };\n    this.fetchImages = () => {\n      const {\n        count,\n        start\n      } = this.state;\n      this.setState({\n        start: this.state.start + count\n      });\n      axios.get(`/api/photos?count=${count}&start=${start}`).then(res => this.setState({\n        images: this.state.images.concat(res.data)\n      }));\n    };\n  }\n  componentDidMount() {\n    const {\n      count,\n      start\n    } = this.state;\n    axios.get(`/api/photos?count=${count}&start=${start}`).then(res => this.setState({\n      images: res.data\n    }));\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"images\",\n      children: /*#__PURE__*/_jsxDEV(InfiniteScroll, {\n        dataLength: this.state.images.length,\n        next: this.fetchImages,\n        hasMore: true,\n        loader: /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 25\n        }, this),\n        children: this.state.images.map(image => /*#__PURE__*/_jsxDEV(Image, {\n          image: image\n        }, image.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 16\n    }, this);\n  }\n}\nexport default Images;","map":{"version":3,"names":["React","Component","axios","InfiniteScroll","Image","jsxDEV","_jsxDEV","Images","constructor","args","state","images","count","start","fetchImages","setState","get","then","res","concat","data","componentDidMount","render","className","children","dataLength","length","next","hasMore","loader","fileName","_jsxFileName","lineNumber","columnNumber","map","image","id"],"sources":["C:/Users/choosy/Documents/React-Projects/react-image-gallery-using-unsplash/client/src/components/Images.js"],"sourcesContent":["import React, { Component } from 'react'\r\nimport axios from 'axios'\r\nimport InfiniteScroll from 'react-infinite-scroll-component'\r\nimport Image from './Image'\r\n\r\nexport class Images extends Component {\r\n    state = {\r\n        images: [],\r\n        count: 30,\r\n        start: 1,\r\n    }\r\n    componentDidMount() {\r\n        const { count, start } = this.state;\r\n        axios\r\n            .get(`/api/photos?count=${count}&start=${start}`)\r\n            .then(res => this.setState({ images: res.data }))\r\n\r\n    }\r\n    fetchImages = () => {\r\n        const { count, start } = this.state;\r\n        this.setState({ start: this.state.start + count })\r\n        axios\r\n            .get(`/api/photos?count=${count}&start=${start}`)\r\n            .then(res => this.setState({ images: this.state.images.concat(res.data) }))\r\n    }\r\n    render() {\r\n        return <div className='images'>\r\n            <InfiniteScroll dataLength={this.state.images.length}\r\n                next={this.fetchImages}\r\n                hasMore={true}\r\n                loader={<h4>Loading...</h4>}\r\n            >\r\n                {\r\n                    this.state.images.map(image => (\r\n                        <Image key={image.id} image={image} />\r\n                    ))\r\n                }\r\n            </InfiniteScroll>\r\n        </div>\r\n    }\r\n}\r\n\r\nexport default Images"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,cAAc,MAAM,iCAAiC;AAC5D,OAAOC,KAAK,MAAM,SAAS;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE3B,OAAO,MAAMC,MAAM,SAASN,SAAS,CAAC;EAAAO,YAAA,GAAAC,IAAA;IAAA,SAAAA,IAAA;IAAA,KAClCC,KAAK,GAAG;MACJC,MAAM,EAAE,EAAE;MACVC,KAAK,EAAE,EAAE;MACTC,KAAK,EAAE;IACX,CAAC;IAAA,KAQDC,WAAW,GAAG,MAAM;MAChB,MAAM;QAAEF,KAAK;QAAEC;MAAM,CAAC,GAAG,IAAI,CAACH,KAAK;MACnC,IAAI,CAACK,QAAQ,CAAC;QAAEF,KAAK,EAAE,IAAI,CAACH,KAAK,CAACG,KAAK,GAAGD;MAAM,CAAC,CAAC;MAClDV,KAAK,CACAc,GAAG,CAAC,qBAAqBJ,KAAK,UAAUC,KAAK,EAAE,CAAC,CAChDI,IAAI,CAACC,GAAG,IAAI,IAAI,CAACH,QAAQ,CAAC;QAAEJ,MAAM,EAAE,IAAI,CAACD,KAAK,CAACC,MAAM,CAACQ,MAAM,CAACD,GAAG,CAACE,IAAI;MAAE,CAAC,CAAC,CAAC;IACnF,CAAC;EAAA;EAbDC,iBAAiBA,CAAA,EAAG;IAChB,MAAM;MAAET,KAAK;MAAEC;IAAM,CAAC,GAAG,IAAI,CAACH,KAAK;IACnCR,KAAK,CACAc,GAAG,CAAC,qBAAqBJ,KAAK,UAAUC,KAAK,EAAE,CAAC,CAChDI,IAAI,CAACC,GAAG,IAAI,IAAI,CAACH,QAAQ,CAAC;MAAEJ,MAAM,EAAEO,GAAG,CAACE;IAAK,CAAC,CAAC,CAAC;EAEzD;EAQAE,MAAMA,CAAA,EAAG;IACL,oBAAOhB,OAAA;MAAKiB,SAAS,EAAC,QAAQ;MAAAC,QAAA,eAC1BlB,OAAA,CAACH,cAAc;QAACsB,UAAU,EAAE,IAAI,CAACf,KAAK,CAACC,MAAM,CAACe,MAAO;QACjDC,IAAI,EAAE,IAAI,CAACb,WAAY;QACvBc,OAAO,EAAE,IAAK;QACdC,MAAM,eAAEvB,OAAA;UAAAkB,QAAA,EAAI;QAAU;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAE;QAAAT,QAAA,EAGxB,IAAI,CAACd,KAAK,CAACC,MAAM,CAACuB,GAAG,CAACC,KAAK,iBACvB7B,OAAA,CAACF,KAAK;UAAgB+B,KAAK,EAAEA;QAAM,GAAvBA,KAAK,CAACC,EAAE;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAiB,CACxC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEM;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChB,CAAC;EACV;AACJ;AAEA,eAAe1B,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}